---

# This file is distributed under the Apache License (the
# "License"); you may not use this file except in compliance
# with the License.  See the LICENSE file distributed with 
# this work for additional information regarding copyright
# ownership. 
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# This file is derived from recipe.sh in OpenHPC distribution 
# and ported by Linaro Ltd. and Fujitsu Ltd.

#
#roles/ohpc-base/tasks/main.yml
#

# ------------------------------------------------------------
# Add baseline OpenHPC and provisioning services (Section 3.3)
# ------------------------------------------------------------
#yum -y groupinstall ohpc-base
- name: Install ohpc-base
  yum: name={{ item }} state=latest
  with_items:
    - ohpc-base
  when:
    ( inventory_hostname in groups[nt_sms] ) or
    ( inventory_hostname in groups[nt_devnodes] ) or
    ( ( inventory_hostname in groups[nt_cnodes] ) and ( enable_warewulf == false ) ) 

#yum -y --installroot=$CHROOT groupinstall ohpc-base-compute
- name: Install ohpc-base-compute for computing node images on master
  yum: name={{ item }} installroot="{{ compute_chroot_loc }}" state=latest
  with_items:
    - ohpc-base-compute
  when:
    - inventory_hostname in groups[nt_sms]
    - enable_warewulf == true

- name: Install ohpc-base-compute on computing nodes
  yum: name={{ item }} state=latest
  with_items:
    - ohpc-base-compute
  when:
    - inventory_hostname in groups[nt_cnodes]
    - enable_warewulf == false

#cp -p /etc/resolv.conf $CHROOT/etc/resolv.conf
- name: Copy /etc/resolv.conf to a computing node image on master
  command: cp /etc/resolv.conf "{{ compute_chroot_loc }}/etc/resolv.conf"
  register: result
  failed_when: result.rc not in [0]
  when:
    - inventory_hostname in groups[nt_sms]
    - enable_warewulf == true

- name: Fetch /etc/resolv.conf in sms to a ansible local resolv.conf
  fetch:
    src: /etc/resolv.conf
    dest: "{{ role_path }}/resolv.conf"
    flat: yes
  when:
    - inventory_hostname in groups[nt_sms]
    - enable_warewulf == false

- name: Copy resolv.conf in ansible local on a computing node
  copy: src="{{ role_path }}/resolv.conf" dest=/etc/resolv.conf
  when:
    - inventory_hostname in groups[nt_cnodes]
    - enable_warewulf == false

- name: Remove resolv.conf on ansible local
  local_action: file path="{{ role_path }}/resolv.conf" state=absent
  become: no
  when:
    - inventory_hostname in groups[nt_sms]
    - enable_warewulf == false

- name: Configure PDSH in bash.rc
  lineinfile:
    path: "{{ ansible_home }}/.bashrc"
    regexp: '^export PDSH_SSH_ARGS_APPEND=.*$'
    line: 'export PDSH_SSH_ARGS_APPEND="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /root/.ssh/cluster.pub"'
    state: present
